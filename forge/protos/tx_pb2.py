# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tx.proto
import sys

from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

from . import type_pb2 as type__pb2
_b = sys.version_info[0] < 3 and (
    lambda x: x
) or (lambda x: x.encode('latin1'))
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor.FileDescriptor(
    name='tx.proto',
    package='forge_abi',
    syntax='proto3',
    serialized_options=None,
    serialized_pb=_b('\n\x08tx.proto\x12\tforge_abi\x1a\x19google/protobuf/any.proto\x1a\ntype.proto\"C\n\x10\x41\x63\x63ountMigrateTx\x12\n\n\x02pk\x18\x01 \x01(\x0c\x12#\n\x04type\x18\x02 \x01(\x0b\x32\x15.forge_abi.WalletType\">\n\x12\x43onsensusUpgradeTx\x12(\n\nvalidators\x18\x01 \x03(\x0b\x32\x14.forge_abi.Validator\")\n\tConfirmTx\x12\x0e\n\x06sender\x18\x01 \x01(\t\x12\x0c\n\x04hash\x18\x02 \x01(\t\"V\n\rCreateAssetTx\x12\x0f\n\x07moniker\x18\x01 \x01(\t\x12\"\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x14.google.protobuf.Any\x12\x10\n\x08readonly\x18\x03 \x01(\x08\"\x1d\n\rDeclareFileTx\x12\x0c\n\x04hash\x18\x01 \x01(\t\"A\n\x0c\x45xchangeInfo\x12!\n\x05value\x18\x01 \x01(\x0b\x32\x12.forge_abi.BigSint\x12\x0e\n\x06\x61ssets\x18\x02 \x03(\t\"l\n\nExchangeTx\x12\n\n\x02to\x18\x01 \x01(\t\x12\'\n\x06sender\x18\x02 \x01(\x0b\x32\x17.forge_abi.ExchangeInfo\x12)\n\x08receiver\x18\x03 \x01(\x0b\x32\x17.forge_abi.ExchangeInfo\"M\n\tDeclareTx\x12\x0f\n\x07moniker\x18\x01 \x01(\t\x12\n\n\x02pk\x18\x02 \x01(\x0c\x12#\n\x04type\x18\x03 \x01(\x0b\x32\x15.forge_abi.WalletType\"*\n\x08RevokeTx\x12\x10\n\x08receiver\x18\x01 \x01(\t\x12\x0c\n\x04hash\x18\x02 \x01(\t\"\x0f\n\rstakeForAsset\"\x0f\n\rstakeForChain\"\x0e\n\x0cStakeForNode\"\x0e\n\x0cstakeForUser\"m\n\x07StakeTx\x12\n\n\x02to\x18\x01 \x01(\t\x12!\n\x05value\x18\x02 \x01(\x0b\x32\x12.forge_abi.BigSint\x12\x0f\n\x07message\x18\x03 \x01(\t\x12\"\n\x04\x64\x61ta\x18\x0f \x01(\x0b\x32\x14.google.protobuf.Any\"J\n\x0cSysUpgradeTx\x12$\n\x04task\x18\x01 \x01(\x0b\x32\x16.forge_abi.UpgradeTask\x12\x14\n\x0cgrace_period\x18\x02 \x01(\r\"a\n\nTransferTx\x12\n\n\x02to\x18\x01 \x01(\t\x12!\n\x05value\x18\x02 \x01(\x0b\x32\x12.forge_abi.BigSint\x12\x0e\n\x06\x61ssets\x18\x03 \x03(\t\x12\x14\n\x0c\x63onfirmation\x18\x04 \x01(\x08\"U\n\rUpdateAssetTx\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\t\x12\x0f\n\x07moniker\x18\x02 \x01(\t\x12\"\n\x04\x64\x61ta\x18\x03 \x01(\x0b\x32\x14.google.protobuf.Anyb\x06proto3'),
    dependencies=[
        google_dot_protobuf_dot_any__pb2.DESCRIPTOR,
        type__pb2.DESCRIPTOR, ],
)


_ACCOUNTMIGRATETX = _descriptor.Descriptor(
    name='AccountMigrateTx',
    full_name='forge_abi.AccountMigrateTx',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='pk', full_name='forge_abi.AccountMigrateTx.pk', index=0,
            number=1, type=12, cpp_type=9, label=1,
            has_default_value=False, default_value=_b(""),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name='type', full_name='forge_abi.AccountMigrateTx.type', index=1,
            number=2, type=11, cpp_type=10, label=1,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,
        ),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=62,
    serialized_end=129,
)


_CONSENSUSUPGRADETX = _descriptor.Descriptor(
    name='ConsensusUpgradeTx',
    full_name='forge_abi.ConsensusUpgradeTx',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='validators', full_name='forge_abi.ConsensusUpgradeTx.validators', index=0,
            number=1, type=11, cpp_type=10, label=3,
            has_default_value=False, default_value=[],
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,
        ),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=131,
    serialized_end=193,
)


_CONFIRMTX = _descriptor.Descriptor(
    name='ConfirmTx',
    full_name='forge_abi.ConfirmTx',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='sender', full_name='forge_abi.ConfirmTx.sender', index=0,
            number=1, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name='hash', full_name='forge_abi.ConfirmTx.hash', index=1,
            number=2, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,
        ),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=195,
    serialized_end=236,
)


_CREATEASSETTX = _descriptor.Descriptor(
    name='CreateAssetTx',
    full_name='forge_abi.CreateAssetTx',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='moniker', full_name='forge_abi.CreateAssetTx.moniker', index=0,
            number=1, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name='data', full_name='forge_abi.CreateAssetTx.data', index=1,
            number=2, type=11, cpp_type=10, label=1,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name='readonly', full_name='forge_abi.CreateAssetTx.readonly', index=2,
            number=3, type=8, cpp_type=7, label=1,
            has_default_value=False, default_value=False,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,
        ),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=238,
    serialized_end=324,
)


_DECLAREFILETX = _descriptor.Descriptor(
    name='DeclareFileTx',
    full_name='forge_abi.DeclareFileTx',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='hash', full_name='forge_abi.DeclareFileTx.hash', index=0,
            number=1, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,
        ),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=326,
    serialized_end=355,
)


_EXCHANGEINFO = _descriptor.Descriptor(
    name='ExchangeInfo',
    full_name='forge_abi.ExchangeInfo',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='value', full_name='forge_abi.ExchangeInfo.value', index=0,
            number=1, type=11, cpp_type=10, label=1,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name='assets', full_name='forge_abi.ExchangeInfo.assets', index=1,
            number=2, type=9, cpp_type=9, label=3,
            has_default_value=False, default_value=[],
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,
        ),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=357,
    serialized_end=422,
)


_EXCHANGETX = _descriptor.Descriptor(
    name='ExchangeTx',
    full_name='forge_abi.ExchangeTx',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='to', full_name='forge_abi.ExchangeTx.to', index=0,
            number=1, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name='sender', full_name='forge_abi.ExchangeTx.sender', index=1,
            number=2, type=11, cpp_type=10, label=1,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name='receiver', full_name='forge_abi.ExchangeTx.receiver', index=2,
            number=3, type=11, cpp_type=10, label=1,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,
        ),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=424,
    serialized_end=532,
)


_DECLARETX = _descriptor.Descriptor(
    name='DeclareTx',
    full_name='forge_abi.DeclareTx',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='moniker', full_name='forge_abi.DeclareTx.moniker', index=0,
            number=1, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name='pk', full_name='forge_abi.DeclareTx.pk', index=1,
            number=2, type=12, cpp_type=9, label=1,
            has_default_value=False, default_value=_b(""),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name='type', full_name='forge_abi.DeclareTx.type', index=2,
            number=3, type=11, cpp_type=10, label=1,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,
        ),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=534,
    serialized_end=611,
)


_REVOKETX = _descriptor.Descriptor(
    name='RevokeTx',
    full_name='forge_abi.RevokeTx',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='receiver', full_name='forge_abi.RevokeTx.receiver', index=0,
            number=1, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name='hash', full_name='forge_abi.RevokeTx.hash', index=1,
            number=2, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,
        ),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=613,
    serialized_end=655,
)


_STAKEFORASSET = _descriptor.Descriptor(
    name='stakeForAsset',
    full_name='forge_abi.stakeForAsset',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=657,
    serialized_end=672,
)


_STAKEFORCHAIN = _descriptor.Descriptor(
    name='stakeForChain',
    full_name='forge_abi.stakeForChain',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=674,
    serialized_end=689,
)


_STAKEFORNODE = _descriptor.Descriptor(
    name='StakeForNode',
    full_name='forge_abi.StakeForNode',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=691,
    serialized_end=705,
)


_STAKEFORUSER = _descriptor.Descriptor(
    name='stakeForUser',
    full_name='forge_abi.stakeForUser',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=707,
    serialized_end=721,
)


_STAKETX = _descriptor.Descriptor(
    name='StakeTx',
    full_name='forge_abi.StakeTx',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='to', full_name='forge_abi.StakeTx.to', index=0,
            number=1, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name='value', full_name='forge_abi.StakeTx.value', index=1,
            number=2, type=11, cpp_type=10, label=1,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name='message', full_name='forge_abi.StakeTx.message', index=2,
            number=3, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name='data', full_name='forge_abi.StakeTx.data', index=3,
            number=15, type=11, cpp_type=10, label=1,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,
        ),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=723,
    serialized_end=832,
)


_SYSUPGRADETX = _descriptor.Descriptor(
    name='SysUpgradeTx',
    full_name='forge_abi.SysUpgradeTx',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='task', full_name='forge_abi.SysUpgradeTx.task', index=0,
            number=1, type=11, cpp_type=10, label=1,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name='grace_period', full_name='forge_abi.SysUpgradeTx.grace_period', index=1,
            number=2, type=13, cpp_type=3, label=1,
            has_default_value=False, default_value=0,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,
        ),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=834,
    serialized_end=908,
)


_TRANSFERTX = _descriptor.Descriptor(
    name='TransferTx',
    full_name='forge_abi.TransferTx',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='to', full_name='forge_abi.TransferTx.to', index=0,
            number=1, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name='value', full_name='forge_abi.TransferTx.value', index=1,
            number=2, type=11, cpp_type=10, label=1,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name='assets', full_name='forge_abi.TransferTx.assets', index=2,
            number=3, type=9, cpp_type=9, label=3,
            has_default_value=False, default_value=[],
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name='confirmation', full_name='forge_abi.TransferTx.confirmation', index=3,
            number=4, type=8, cpp_type=7, label=1,
            has_default_value=False, default_value=False,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,
        ),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=910,
    serialized_end=1007,
)


_UPDATEASSETTX = _descriptor.Descriptor(
    name='UpdateAssetTx',
    full_name='forge_abi.UpdateAssetTx',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='address', full_name='forge_abi.UpdateAssetTx.address', index=0,
            number=1, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name='moniker', full_name='forge_abi.UpdateAssetTx.moniker', index=1,
            number=2, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name='data', full_name='forge_abi.UpdateAssetTx.data', index=2,
            number=3, type=11, cpp_type=10, label=1,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,
        ),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=1009,
    serialized_end=1094,
)

_ACCOUNTMIGRATETX.fields_by_name['type'].message_type = type__pb2._WALLETTYPE
_CONSENSUSUPGRADETX.fields_by_name['validators'].message_type = type__pb2._VALIDATOR
_CREATEASSETTX.fields_by_name['data'].message_type = google_dot_protobuf_dot_any__pb2._ANY
_EXCHANGEINFO.fields_by_name['value'].message_type = type__pb2._BIGSINT
_EXCHANGETX.fields_by_name['sender'].message_type = _EXCHANGEINFO
_EXCHANGETX.fields_by_name['receiver'].message_type = _EXCHANGEINFO
_DECLARETX.fields_by_name['type'].message_type = type__pb2._WALLETTYPE
_STAKETX.fields_by_name['value'].message_type = type__pb2._BIGSINT
_STAKETX.fields_by_name['data'].message_type = google_dot_protobuf_dot_any__pb2._ANY
_SYSUPGRADETX.fields_by_name['task'].message_type = type__pb2._UPGRADETASK
_TRANSFERTX.fields_by_name['value'].message_type = type__pb2._BIGSINT
_UPDATEASSETTX.fields_by_name['data'].message_type = google_dot_protobuf_dot_any__pb2._ANY
DESCRIPTOR.message_types_by_name['AccountMigrateTx'] = _ACCOUNTMIGRATETX
DESCRIPTOR.message_types_by_name['ConsensusUpgradeTx'] = _CONSENSUSUPGRADETX
DESCRIPTOR.message_types_by_name['ConfirmTx'] = _CONFIRMTX
DESCRIPTOR.message_types_by_name['CreateAssetTx'] = _CREATEASSETTX
DESCRIPTOR.message_types_by_name['DeclareFileTx'] = _DECLAREFILETX
DESCRIPTOR.message_types_by_name['ExchangeInfo'] = _EXCHANGEINFO
DESCRIPTOR.message_types_by_name['ExchangeTx'] = _EXCHANGETX
DESCRIPTOR.message_types_by_name['DeclareTx'] = _DECLARETX
DESCRIPTOR.message_types_by_name['RevokeTx'] = _REVOKETX
DESCRIPTOR.message_types_by_name['stakeForAsset'] = _STAKEFORASSET
DESCRIPTOR.message_types_by_name['stakeForChain'] = _STAKEFORCHAIN
DESCRIPTOR.message_types_by_name['StakeForNode'] = _STAKEFORNODE
DESCRIPTOR.message_types_by_name['stakeForUser'] = _STAKEFORUSER
DESCRIPTOR.message_types_by_name['StakeTx'] = _STAKETX
DESCRIPTOR.message_types_by_name['SysUpgradeTx'] = _SYSUPGRADETX
DESCRIPTOR.message_types_by_name['TransferTx'] = _TRANSFERTX
DESCRIPTOR.message_types_by_name['UpdateAssetTx'] = _UPDATEASSETTX
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

AccountMigrateTx = _reflection.GeneratedProtocolMessageType(
    'AccountMigrateTx', (_message.Message,), dict(
        DESCRIPTOR=_ACCOUNTMIGRATETX,
        __module__='tx_pb2',
        # @@protoc_insertion_point(class_scope:forge_abi.AccountMigrateTx)
    ),
)
_sym_db.RegisterMessage(AccountMigrateTx)

ConsensusUpgradeTx = _reflection.GeneratedProtocolMessageType(
    'ConsensusUpgradeTx', (_message.Message,), dict(
        DESCRIPTOR=_CONSENSUSUPGRADETX,
        __module__='tx_pb2',
        # @@protoc_insertion_point(class_scope:forge_abi.ConsensusUpgradeTx)
    ),
)
_sym_db.RegisterMessage(ConsensusUpgradeTx)

ConfirmTx = _reflection.GeneratedProtocolMessageType(
    'ConfirmTx', (_message.Message,), dict(
        DESCRIPTOR=_CONFIRMTX,
        __module__='tx_pb2',
        # @@protoc_insertion_point(class_scope:forge_abi.ConfirmTx)
    ),
)
_sym_db.RegisterMessage(ConfirmTx)

CreateAssetTx = _reflection.GeneratedProtocolMessageType(
    'CreateAssetTx', (_message.Message,), dict(
        DESCRIPTOR=_CREATEASSETTX,
        __module__='tx_pb2',
        # @@protoc_insertion_point(class_scope:forge_abi.CreateAssetTx)
    ),
)
_sym_db.RegisterMessage(CreateAssetTx)

DeclareFileTx = _reflection.GeneratedProtocolMessageType(
    'DeclareFileTx', (_message.Message,), dict(
        DESCRIPTOR=_DECLAREFILETX,
        __module__='tx_pb2',
        # @@protoc_insertion_point(class_scope:forge_abi.DeclareFileTx)
    ),
)
_sym_db.RegisterMessage(DeclareFileTx)

ExchangeInfo = _reflection.GeneratedProtocolMessageType(
    'ExchangeInfo', (_message.Message,), dict(
        DESCRIPTOR=_EXCHANGEINFO,
        __module__='tx_pb2',
        # @@protoc_insertion_point(class_scope:forge_abi.ExchangeInfo)
    ),
)
_sym_db.RegisterMessage(ExchangeInfo)

ExchangeTx = _reflection.GeneratedProtocolMessageType(
    'ExchangeTx', (_message.Message,), dict(
        DESCRIPTOR=_EXCHANGETX,
        __module__='tx_pb2',
        # @@protoc_insertion_point(class_scope:forge_abi.ExchangeTx)
    ),
)
_sym_db.RegisterMessage(ExchangeTx)

DeclareTx = _reflection.GeneratedProtocolMessageType(
    'DeclareTx', (_message.Message,), dict(
        DESCRIPTOR=_DECLARETX,
        __module__='tx_pb2',
        # @@protoc_insertion_point(class_scope:forge_abi.DeclareTx)
    ),
)
_sym_db.RegisterMessage(DeclareTx)

RevokeTx = _reflection.GeneratedProtocolMessageType(
    'RevokeTx', (_message.Message,), dict(
        DESCRIPTOR=_REVOKETX,
        __module__='tx_pb2',
        # @@protoc_insertion_point(class_scope:forge_abi.RevokeTx)
    ),
)
_sym_db.RegisterMessage(RevokeTx)

stakeForAsset = _reflection.GeneratedProtocolMessageType(
    'stakeForAsset', (_message.Message,), dict(
        DESCRIPTOR=_STAKEFORASSET,
        __module__='tx_pb2',
        # @@protoc_insertion_point(class_scope:forge_abi.stakeForAsset)
    ),
)
_sym_db.RegisterMessage(stakeForAsset)

stakeForChain = _reflection.GeneratedProtocolMessageType(
    'stakeForChain', (_message.Message,), dict(
        DESCRIPTOR=_STAKEFORCHAIN,
        __module__='tx_pb2',
        # @@protoc_insertion_point(class_scope:forge_abi.stakeForChain)
    ),
)
_sym_db.RegisterMessage(stakeForChain)

StakeForNode = _reflection.GeneratedProtocolMessageType(
    'StakeForNode', (_message.Message,), dict(
        DESCRIPTOR=_STAKEFORNODE,
        __module__='tx_pb2',
        # @@protoc_insertion_point(class_scope:forge_abi.StakeForNode)
    ),
)
_sym_db.RegisterMessage(StakeForNode)

stakeForUser = _reflection.GeneratedProtocolMessageType(
    'stakeForUser', (_message.Message,), dict(
        DESCRIPTOR=_STAKEFORUSER,
        __module__='tx_pb2',
        # @@protoc_insertion_point(class_scope:forge_abi.stakeForUser)
    ),
)
_sym_db.RegisterMessage(stakeForUser)

StakeTx = _reflection.GeneratedProtocolMessageType(
    'StakeTx', (_message.Message,), dict(
        DESCRIPTOR=_STAKETX,
        __module__='tx_pb2',
        # @@protoc_insertion_point(class_scope:forge_abi.StakeTx)
    ),
)
_sym_db.RegisterMessage(StakeTx)

SysUpgradeTx = _reflection.GeneratedProtocolMessageType(
    'SysUpgradeTx', (_message.Message,), dict(
        DESCRIPTOR=_SYSUPGRADETX,
        __module__='tx_pb2',
        # @@protoc_insertion_point(class_scope:forge_abi.SysUpgradeTx)
    ),
)
_sym_db.RegisterMessage(SysUpgradeTx)

TransferTx = _reflection.GeneratedProtocolMessageType(
    'TransferTx', (_message.Message,), dict(
        DESCRIPTOR=_TRANSFERTX,
        __module__='tx_pb2',
        # @@protoc_insertion_point(class_scope:forge_abi.TransferTx)
    ),
)
_sym_db.RegisterMessage(TransferTx)

UpdateAssetTx = _reflection.GeneratedProtocolMessageType(
    'UpdateAssetTx', (_message.Message,), dict(
        DESCRIPTOR=_UPDATEASSETTX,
        __module__='tx_pb2',
        # @@protoc_insertion_point(class_scope:forge_abi.UpdateAssetTx)
    ),
)
_sym_db.RegisterMessage(UpdateAssetTx)


# @@protoc_insertion_point(module_scope)

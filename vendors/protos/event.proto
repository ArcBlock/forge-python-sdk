syntax = "proto3";
package forge_abi;

import "vendor.proto";
import "code.proto";
import "type.proto";

// event happened on Forge powered chain
enum TopicType {
  // most commonly used event
  transfer = 0;

  // 1-15 fequently used event
  account_migrate = 1;
  confirm = 2;
  create_asset = 3;
  exchange = 4;
  revoke = 5;

  // 7-15 reserved for future frequent forge tx

  // 16-2047 infrequently used event
  begin_block = 16;
  end_block = 17;

  declare = 19;
  account_upgrade = 20;
  consensus_upgrade = 21;
  declare_file = 22;
  sys_upgrade = 23;

  // 24-128 reserved for future infrequent forge tx

  account_state = 129;
  asset_state = 130;
  channel_state = 131;
  forge_state = 132;

  // user defined event type shall start from 256.
}

// filter could be: value.header.height > 10086 and value.byzantine_validators
// != []
message RequestSubscribe {
  TopicType type = 1;
  string filter = 2;
}

message ResponseSubscribe {
  StatusCode code = 1;
  oneof value {
    string topic = 2;
    Transaction transfer = 3;
    Transaction account_migrate = 4;
    Transaction confirm = 5;
    Transaction create_asset = 6;
    Transaction exchange = 7;
    Transaction revoke = 8;

    RequestBeginBlock begin_block = 16;
    RequestEndBlock end_block = 17;

    Transaction declare = 19;
    Transaction account_upgrade = 20;
    Transaction consensus_upgrade = 21;
    Transaction declare_file = 22;
    Transaction sys_upgrade = 23;

    Transaction account_state = 129;
    Transaction asset_state = 130;
    Transaction channel_state = 131;
    Transaction forge_state = 132;
  }
}

service EventRpc {
  rpc subscribe(RequestSubscribe) returns (stream ResponseSubscribe);
}

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from examples.event_chain.protos import vendor_pb2 as vendor__pb2


class ABCIApplicationStub(object):
    """----------------------------------------
    Service Definition

    """

    def __init__(self, channel):
        """Constructor.

        Args:
          channel: A grpc.Channel.
        """
        self.Echo = channel.unary_unary(
            '/abci_vendor.ABCIApplication/Echo',
            request_serializer=vendor__pb2.RequestEcho.SerializeToString,
            response_deserializer=vendor__pb2.ResponseEcho.FromString,
        )
        self.Flush = channel.unary_unary(
            '/abci_vendor.ABCIApplication/Flush',
            request_serializer=vendor__pb2.RequestFlush.SerializeToString,
            response_deserializer=vendor__pb2.ResponseFlush.FromString,
        )
        self.Info = channel.unary_unary(
            '/abci_vendor.ABCIApplication/Info',
            request_serializer=vendor__pb2.RequestInfo.SerializeToString,
            response_deserializer=vendor__pb2.ResponseInfo.FromString,
        )
        self.SetOption = channel.unary_unary(
            '/abci_vendor.ABCIApplication/SetOption',
            request_serializer=vendor__pb2.RequestSetOption.SerializeToString,
            response_deserializer=vendor__pb2.ResponseSetOption.FromString,
        )
        self.DeliverTx = channel.unary_unary(
            '/abci_vendor.ABCIApplication/DeliverTx',
            request_serializer=vendor__pb2.RequestDeliverTx.SerializeToString,
            response_deserializer=vendor__pb2.ResponseDeliverTx.FromString,
        )
        self.CheckTx = channel.unary_unary(
            '/abci_vendor.ABCIApplication/CheckTx',
            request_serializer=vendor__pb2.RequestCheckTx.SerializeToString,
            response_deserializer=vendor__pb2.ResponseCheckTx.FromString,
        )
        self.Query = channel.unary_unary(
            '/abci_vendor.ABCIApplication/Query',
            request_serializer=vendor__pb2.RequestQuery.SerializeToString,
            response_deserializer=vendor__pb2.ResponseQuery.FromString,
        )
        self.Commit = channel.unary_unary(
            '/abci_vendor.ABCIApplication/Commit',
            request_serializer=vendor__pb2.RequestCommit.SerializeToString,
            response_deserializer=vendor__pb2.ResponseCommit.FromString,
        )
        self.InitChain = channel.unary_unary(
            '/abci_vendor.ABCIApplication/InitChain',
            request_serializer=vendor__pb2.RequestInitChain.SerializeToString,
            response_deserializer=vendor__pb2.ResponseInitChain.FromString,
        )
        self.BeginBlock = channel.unary_unary(
            '/abci_vendor.ABCIApplication/BeginBlock',
            request_serializer=vendor__pb2.RequestBeginBlock.SerializeToString,
            response_deserializer=vendor__pb2.ResponseBeginBlock.FromString,
        )
        self.EndBlock = channel.unary_unary(
            '/abci_vendor.ABCIApplication/EndBlock',
            request_serializer=vendor__pb2.RequestEndBlock.SerializeToString,
            response_deserializer=vendor__pb2.ResponseEndBlock.FromString,
        )


class ABCIApplicationServicer(object):
    """----------------------------------------
    Service Definition

    """

    def Echo(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Flush(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Info(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetOption(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeliverTx(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckTx(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Query(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Commit(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InitChain(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BeginBlock(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EndBlock(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ABCIApplicationServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Echo': grpc.unary_unary_rpc_method_handler(
            servicer.Echo,
            request_deserializer=vendor__pb2.RequestEcho.FromString,
            response_serializer=vendor__pb2.ResponseEcho.SerializeToString,
        ),
        'Flush': grpc.unary_unary_rpc_method_handler(
            servicer.Flush,
            request_deserializer=vendor__pb2.RequestFlush.FromString,
            response_serializer=vendor__pb2.ResponseFlush.SerializeToString,
        ),
        'Info': grpc.unary_unary_rpc_method_handler(
            servicer.Info,
            request_deserializer=vendor__pb2.RequestInfo.FromString,
            response_serializer=vendor__pb2.ResponseInfo.SerializeToString,
        ),
        'SetOption': grpc.unary_unary_rpc_method_handler(
            servicer.SetOption,
            request_deserializer=vendor__pb2.RequestSetOption.FromString,
            response_serializer=vendor__pb2.ResponseSetOption.SerializeToString,
        ),
        'DeliverTx': grpc.unary_unary_rpc_method_handler(
            servicer.DeliverTx,
            request_deserializer=vendor__pb2.RequestDeliverTx.FromString,
            response_serializer=vendor__pb2.ResponseDeliverTx.SerializeToString,
        ),
        'CheckTx': grpc.unary_unary_rpc_method_handler(
            servicer.CheckTx,
            request_deserializer=vendor__pb2.RequestCheckTx.FromString,
            response_serializer=vendor__pb2.ResponseCheckTx.SerializeToString,
        ),
        'Query': grpc.unary_unary_rpc_method_handler(
            servicer.Query,
            request_deserializer=vendor__pb2.RequestQuery.FromString,
            response_serializer=vendor__pb2.ResponseQuery.SerializeToString,
        ),
        'Commit': grpc.unary_unary_rpc_method_handler(
            servicer.Commit,
            request_deserializer=vendor__pb2.RequestCommit.FromString,
            response_serializer=vendor__pb2.ResponseCommit.SerializeToString,
        ),
        'InitChain': grpc.unary_unary_rpc_method_handler(
            servicer.InitChain,
            request_deserializer=vendor__pb2.RequestInitChain.FromString,
            response_serializer=vendor__pb2.ResponseInitChain.SerializeToString,
        ),
        'BeginBlock': grpc.unary_unary_rpc_method_handler(
            servicer.BeginBlock,
            request_deserializer=vendor__pb2.RequestBeginBlock.FromString,
            response_serializer=vendor__pb2.ResponseBeginBlock.SerializeToString,
        ),
        'EndBlock': grpc.unary_unary_rpc_method_handler(
            servicer.EndBlock,
            request_deserializer=vendor__pb2.RequestEndBlock.FromString,
            response_serializer=vendor__pb2.ResponseEndBlock.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'abci_vendor.ABCIApplication', rpc_method_handlers,
    )
    server.add_generic_rpc_handlers((generic_handler,))
